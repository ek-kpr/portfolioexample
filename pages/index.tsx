import Head from 'next/head';
import Image from 'next/image';
import { Inter } from '@next/font/google';
import Header from '@/components/header';
import Hero from '@/components/hero';
import { ThemeProvider } from 'next-themes';
import About from '@/components/about';
import WorkExperience from '@/components/Workexperience';
import Skills from '@/components/skills';
import Projects from '@/components/projects';
import ContactMe from '@/components/ContactMe';
import Link from 'next/link';
import { ArrowUpCircleIcon } from '@heroicons/react/24/solid';
import { GetStaticProps, NextPage } from 'next';
import { Experience, PageInfo, Project, skill, Social } from '@/typings';
import { fetchPageInfo } from '@/utils/fetchPageInfo';
import { fetchSkills } from '@/utils/fetchSkills';
import { fetchProject } from '@/utils/fetchProjects';
import { fetchSocial } from '@/utils/fetchSocials';
import { fetchExperience } from '@/utils/fetchExperience';

type Props = {
    pageInfo: PageInfo;
    experiences: Experience[];
    skills: skill[];
    projects: Project[];
    socials: Social[];
};

const Home = ({ pageInfo, experiences, skills, socials, projects }: Props) => {
    return (
        <ThemeProvider enableSystem={true} attribute="class">
            <div
                className="bg-[conic-gradient(at_top,_var(--tw-gradient-stops))] from-gray-100 to-gray-300 
      dark:bg-[conic-gradient(at_top,_var(--tw-gradient-stops))] dark:from-gray-700 dark:via-gray-900 dark:to-black h-screen snap-y snap-mandatory overflow-y-scroll overflow-x-hidden z-0 
      scrollbar scrollbar-track-gray-400/20 scrollbar-thumb-orange-600">
                <Head>
                    <title>{`${pageInfo?.name} - Portfolio`}</title>
                    <meta
                        name="description"
                        content="Generated by create next app"
                    />
                    <meta
                        name="viewport"
                        content="width=device-width, initial-scale=1"
                    />
                    <link rel="icon" href="/favicon.ico" />
                </Head>

                <Header socials={socials} />
                <section id="hero" className="snap-start">
                    <Hero pageInfo={pageInfo} />
                </section>

                {/* About */}
                <section id="about" className="snap-center">
                    <About pageInfo={pageInfo} />
                </section>
                {/* experience */}
                <section id="experience" className="snap-center">
                    <WorkExperience experiences={experiences} />
                </section>
                {/* skills */}
                <section id="skills" className="snap-start"></section>
                <Skills skills={skills} />

                {/* contact me */}
                <section id="projects" className="snap-start">
                    <Projects projects={projects} />
                </section>

                {/* contact me */}
                <section id="contact" className="snap-start">
                    <ContactMe />
                </section>
                <Link href="#hero">
                    <footer className="sticky bottom-5 w-full cursor-pointer">
                        <div className="flex items-center justify-center">
                            <ArrowUpCircleIcon className="h-10 w-10 filter text-orange-600 animate-pulse cursor-pointer" />
                        </div>
                    </footer>
                </Link>
            </div>
        </ThemeProvider>
    );
};

export default Home;

export const getStaticProps: GetStaticProps<Props> = async () => {
    const pageInfo: PageInfo = await fetchPageInfo();
    const experiences: Experience[] = await fetchExperience();
    const skills: skill[] = await fetchSkills();
    const projects: Project[] = await fetchProject();
    const socials: Social[] = await fetchSocial();

    return {
        props: {
            pageInfo,
            experiences,
            skills,
            projects,
            socials,
        }, //cache after 10s change before deploying
        revalidate: 3600,
    };
};
